{"version":3,"sources":["About.js","Day.js","Week.js","Month.js","App.js","Footer.js","Export.js","Import.js","ImportExport.js","index.js"],"names":["About","className","href","Day","props","wroteToday","dayInfo","updateWrote","enabled","isCurrentDay","dayOfMonth","wrote","onClick","Week","week","map","index","getWroteInfoKey","year","month","getWroteInfo","monthKey","wroteInfo","window","localStorage","getItem","JSON","parse","getDayInfo","daysOfMonth","days","firstDay","Date","currentDay","getMonth","push","getDate","firstSunday","getDay","unshift","undefined","previousDay","getFullYear","lastSaturday","length","nextDay","getDaysOfMonth","toDateString","day","Month","useState","setDayInfo","useEffect","useCallback","setItem","stringify","setWroteInfo","weeks","i","slice","getWeeksFromDays","App","now","setYear","setMonth","monthYearTitle","toLocaleDateString","previousMonth","getPreviousMonth","newYear","newMonth","nextMonth","getNextMonth","Footer","mainLink","useLocation","pathname","title","to","Export","exportedData","exportedDataLink","encodeURIComponent","link","document","createElement","download","body","appendChild","click","removeChild","Import","importBoxValue","setImportBoxValue","successErrorMessage","setSuccessErrorMessage","style","color","value","onChange","event","target","parsedValue","SyntaxError","clear","Object","entries","key","syntaxError","ImportExport","ReactDOM","render","StrictMode","path","getElementById"],"mappings":"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","file":"static/js/main.822f0ff0.chunk.js","sourcesContent":["function About() {\n  return (\n    <div>\n      <h1>About</h1>\n      <div className='page-content'>\n        <p>\n          I Wrote Today is an app for tracking what days of the month you completed a task. Click on a day to toggle whether you completed your task on that day.\n        </p>\n        <p>\n          Your data is stored in your browser's local storage, so you will be able to see what days you toggled on and off as long as you keep using the same browser (and don't clear site storage!).\n        </p>\n        <p>\n          I Wrote Today <a href='https://github.com/sheesania/i-wrote-today'>was built by Alison Blomenberg</a>. Calendar CSS based on <a href='https://codepen.io/KennySing/pen/rBDlJ'>Kenny Sing's responsive calendar</a>. \"<a href='https://thenounproject.com/search/?q=cat&i=3556313'>Cat</a>\" icon by Gregor Cresnar from <a href='https://thenounproject.com/'>the Noun Project</a>.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default About;","function Day(props) {\n  const { dayInfo, updateWrote } = props;\n\n  const enabled = !!dayInfo ? 'day-enabled' : 'day-disabled';\n  const isCurrentDay = dayInfo && dayInfo.isCurrentDay ? 'current-day' : '';\n  const dayOfMonth = dayInfo ? dayInfo.dayOfMonth : '';\n\n  let wroteToday;\n  if (!dayInfo) {\n    wroteToday = '';\n  } else {\n    wroteToday = dayInfo.wrote ? 'wrote-today' : 'didnt-write';\n  }\n\n  const updateWroteToday = () => {\n    if (!dayInfo) {\n      return;\n    }\n    updateWrote(dayOfMonth, !dayInfo.wrote);\n  };\n\n  return (\n    <td\n      onClick={updateWroteToday}\n      className={`day ${enabled} ${isCurrentDay} ${wroteToday}`}>\n      <span className='day-of-month'>{dayOfMonth}</span>\n    </td>\n  );\n}\n\nexport default Day;","import Day from './Day';\n\nfunction Week(props) {\n  return (\n    <tr className='week'>\n      {props.week.map((dayInfo, index) => <Day dayInfo={dayInfo} updateWrote={props.updateWrote} key={index}/>)}\n    </tr>\n  );\n}\n\nexport default Week;","import { useCallback, useEffect, useState } from 'react';\nimport Week from './Week';\n\n// Functions for getting/setting information about what days you wrote.\n// This data is stored by month in local storage in a data structure like this:\n// 20211: {\"1\": true, \"4\": true}\n// for February 2021 with all other days marked false. Only days which are marked true are included in the object.\n//\n// (It would be more space-efficient to just use 1 or any 1-char truthy value instead of 'true'\n// ...but I just can't bring myself to)\nfunction getWroteInfoKey(year, month) {\n  return `${year}${month}`;\n}\nfunction getWroteInfo(year, month) {\n  const monthKey = getWroteInfoKey(year, month);\n  const wroteInfo = window.localStorage.getItem(monthKey);\n  if (wroteInfo === null) {\n    return {};\n  } else {\n    return JSON.parse(wroteInfo);\n  }\n}\nfunction setWroteInfo(year, month, wroteInfo) {\n  const monthKey = getWroteInfoKey(year, month);\n  window.localStorage.setItem(monthKey, JSON.stringify(wroteInfo));\n}\n\n// Returns an Array<Date|undefined> representing the days on a monthly calendar.\n// Dates represent days in the given month\n// undefined represents days in other months that would appear at the beginning/end of the calendar to fill out the week\nfunction getDaysOfMonth(year, month) {\n  const days = [];\n  const firstDay = new Date(year, month, 1);\n\n  let currentDay = firstDay;\n  while (currentDay.getMonth() === firstDay.getMonth()) {\n    days.push(currentDay);\n    currentDay = new Date(year, month, currentDay.getDate() + 1);\n  }\n\n  let firstSunday = firstDay;\n  while (firstSunday.getDay() !== 0) {\n    days.unshift(undefined);\n    const previousDay = new Date(firstSunday.getFullYear(), firstSunday.getMonth(), firstSunday.getDate() - 1);\n    firstSunday = previousDay;\n  }\n\n  let lastSaturday = days[days.length - 1];\n  while (lastSaturday.getDay() !== 6) {\n    days.push(undefined);\n    const nextDay = new Date(lastSaturday.getFullYear(), lastSaturday.getMonth(), lastSaturday.getDate() + 1);\n    lastSaturday = nextDay;\n  }\n\n  return days;\n}\n\n// Combine information about the days you wrote with info about the days in a given calendar month.\nfunction getDayInfo(year, month) {\n  const daysOfMonth = getDaysOfMonth(year, month);\n  const wroteInfo = getWroteInfo(year, month);\n\n  const currentDay = new Date().toDateString();\n  const dayInfo = daysOfMonth.map(day => {\n    if (!day) {\n      return undefined;\n    } else {\n      const dayOfMonth = day.getDate();\n      return {\n        dayOfMonth: dayOfMonth,\n        isCurrentDay: currentDay === day.toDateString(),\n        wrote: !!wroteInfo[dayOfMonth],\n      };\n    }\n  });\n\n  return dayInfo;\n}\n\n// Slice up an array into 7-item chunks (returning an array of arrays)\nfunction getWeeksFromDays(days) {\n  const weeks = [];\n  for (let i = 0; i < days.length; i += 7) {\n    weeks.push(days.slice(i, i + 7));\n  }\n  return weeks;\n}\n\nfunction Month(props) {\n  const { year, month } = props;\n  const [dayInfo, setDayInfo] = useState([]);\n\n  useEffect(() => {\n    setDayInfo(getDayInfo(year, month));\n  }, [year, month])\n\n  const updateWrote = useCallback((dayOfMonth, wrote) => {\n    // Note that wroteInfo is indexed by day of month, while dayInfo will probably contain some extra undefined days at\n    // the beginning and end of the month!\n    const wroteInfo = getWroteInfo(year, month);\n    if (wrote) {\n      wroteInfo[dayOfMonth] = true;\n    } else {\n      delete wroteInfo[dayOfMonth];\n    }\n    setWroteInfo(year, month, wroteInfo);\n\n    setDayInfo(dayInfo.map(dayInfo => {\n      if (dayInfo && dayInfo.dayOfMonth === dayOfMonth) {\n        return { ...dayInfo, wrote: wrote };\n      } else {\n        return dayInfo;\n      }\n    }));\n  }, [year, month, dayInfo, setDayInfo]);\n\n  const weeks = getWeeksFromDays(dayInfo);\n\n  return (\n    <div className='month'>\n      <table>\n        <thead>\n          <tr>\n            <th>Sun</th>\n            <th>Mon</th>\n            <th>Tue</th>\n            <th>Wed</th>\n            <th>Thu</th>\n            <th>Fri</th>\n            <th>Sat</th>\n          </tr>\n        </thead>\n        <tbody>\n          {weeks.map((week, index) => <Week week={week} updateWrote={updateWrote} key={index}/>)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Month;\n","import { useState } from 'react';\nimport Month from './Month';\nimport './css/App.css';\n\nfunction getPreviousMonth(year, month) {\n  const previousMonth = new Date(year, month - 1);\n  return [previousMonth.getFullYear(), previousMonth.getMonth()];\n}\n\nfunction getNextMonth(year, month) {\n  const nextMonth = new Date(year, month + 1);\n  return [nextMonth.getFullYear(), nextMonth.getMonth()];\n}\n\nfunction App() {\n  const now = new Date();\n  const [year, setYear] = useState(now.getFullYear())\n  const [month, setMonth] = useState(now.getMonth());\n\n  const goToPreviousMonth = () => {\n    const [newYear, newMonth] = getPreviousMonth(year, month);\n    setYear(newYear);\n    setMonth(newMonth);\n  };\n\n  const goToNextMonth = () => {\n    const [newYear, newMonth] = getNextMonth(year, month);\n    setYear(newYear);\n    setMonth(newMonth);\n  };\n\n  const monthYearTitle = new Date(year, month).toLocaleDateString('default', { month: 'long', year: 'numeric' });\n\n  return (\n    <div className='app'>\n      <div className='app-header'>\n        <h1>{monthYearTitle}</h1>\n        <div className='month-buttons'>\n          <span className='month-button' onClick={goToPreviousMonth}>←</span>\n          <span className='month-button' onClick={goToNextMonth}>→</span>\n        </div>\n      </div>\n      <Month year={year} month={month}></Month>\n    </div>\n  );\n}\n\nexport default App;\n","import { useLocation, Link } from \"react-router-dom\";\nimport { FaFileExport, FaHome, FaInfoCircle } from 'react-icons/fa';\nimport './css/Footer.css';\n\nfunction Footer() {\n  const location = useLocation();\n  const mainLink = location.pathname === '/'\n    ? undefined\n    : <li title='Home'><Link to=\"/\"><FaHome /></Link></li>;\n\n\n  return (\n    <div className='footer'>\n      <ul>\n        {mainLink}\n        <li title='Import and export your data'>\n          <Link to=\"/import-export\"><FaFileExport/></Link>\n        </li>\n        <li title='About'>\n          <Link to=\"/about\"><FaInfoCircle/></Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Footer;","function Export() {\n  const handleExport = () => {\n    const exportedData = JSON.stringify(window.localStorage);\n    const exportedDataLink = `data:text/json;charset=utf-8,${encodeURIComponent(exportedData)}`;\n\n    // make a throwaway link element, click it, and then remove it\n    const link = window.document.createElement('a');\n    link.href = exportedDataLink;\n    link.download = 'iwrotetoday.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div>\n      <h2>Export</h2>\n      <p>\n        To export your data, click \"Export\" and download the \"iwrotetoday.txt\" file.\n      </p>\n      <div className='button-parent'>\n        <button className='import-export-button' onClick={handleExport}>Export</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Export;","import { useState } from 'react';\n\nfunction Import() {\n  const [importBoxValue, setImportBoxValue] = useState('');\n  const [successErrorMessage, setSuccessErrorMessage] = useState('');\n\n  const handleImport = () => {\n    try {\n      if (!importBoxValue || importBoxValue.length === 0) {\n        setSuccessErrorMessage('The import box is empty.');\n      } else {\n        const parsedValue = JSON.parse(importBoxValue);\n        if (!(typeof parsedValue === 'object' && parsedValue !== null)) {\n          throw new SyntaxError();\n        }\n        const localStorage = window.localStorage;\n        localStorage.clear();\n        for (const [key, value] of Object.entries(parsedValue)) {\n          localStorage.setItem(key, value);\n        }\n        setSuccessErrorMessage('Success!');\n      }\n    } catch (syntaxError) {\n      setSuccessErrorMessage('There was a problem parsing your file. Are you sure it\\'s an iwrotetoday.txt that you exported here?');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Import</h2>\n        <p>\n          To import your data, open up an \"iwrotetoday.txt\" file that you exported earlier. Paste the contents here and click \"Import\".\n          <span style={{color: '#884340'}}> WARNING:</span> All existing data will be overwritten!\n        </p>\n        <textarea\n          value={importBoxValue}\n          onChange={(event) => setImportBoxValue(event.target.value)}>\n        </textarea>\n        <p className='successErrorMessage'>{successErrorMessage}</p>\n        <div className='button-parent'>\n          <button className='import-export-button' onClick={handleImport}>Import</button>\n        </div>\n    </div>\n  );\n}\n\nexport default Import;","import Export from './Export';\nimport Import from './Import';\nimport './css/ImportExport.css';\n\nfunction ImportExport() {\n  return (\n    <div>\n      <h1>Import + export your data</h1>\n      <div className='page-content'>\n        <Export/>\n        <Import/>\n      </div>\n    </div>\n  );\n}\n\nexport default ImportExport;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport About from './About';\nimport App from './App';\nimport Footer from './Footer';\nimport ImportExport from './ImportExport';\nimport './css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/import-export\">\n          <ImportExport />\n        </Route>\n        <Route path=\"/\">\n          <App />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}